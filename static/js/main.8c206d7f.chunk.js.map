{"version":3,"sources":["components/InputText.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["InputText","inputText","setInputText","todoArray","setTodoArray","setFilter","className","value","onChange","e","console","log","target","type","onClick","preventDefault","text","completed","id","Math","random","TodoItem","todoItem","map","item","filter","el","TodoList","todo","Todo","App","useState","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","circle1","document","querySelector","setInterval","style","left","floor","top","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8c206d7f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst InputText = ({ inputText, setInputText, todoArray, setTodoArray, setFilter }) => {\r\n  //here we can write javascript code\r\n  const inputTextHandler = (e) => {\r\n    console.log(e.target.value);\r\n    setInputText(e.target.value);\r\n  };\r\n  const submitTodoHandler =(e) => {\r\n      e.preventDefault();\r\n      setTodoArray([\r\n        ...todoArray, \r\n        {text: inputText, completed: false, id: Math.random()*10000}\r\n      ]);\r\n      setInputText('');\r\n  }\r\n  const filterHandler = (e) => {\r\n    setFilter(e.target.value);\r\n  }\r\n  return (\r\n    <form className=\"form\">\r\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\"> +\r\n        {/* <i className=\"fas fa-plus-square\"></i> */}\r\n      </button>\r\n      {/* <div className=\"select\">\r\n        <select onChange={filterHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option className=\"filter-option\" value=\"all\">All</option>\r\n          <option className=\"filter-option\" value=\"completed\">Completed</option>\r\n          <option className=\"filter-option\" value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div> */}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default InputText;\r\n","import React from \"react\";\r\n\r\nconst TodoItem = ({text, id, todoItem, todoArray, setTodoArray}) => {\r\n//Events\r\n    const deleteHandler = () => {\r\n        setTodoArray(todoArray.filter((el) => el.id !== todoItem.id));\r\n    }\r\n\r\n    const completeHandler = () => {\r\n        setTodoArray(todoArray.map((item) => {\r\n          if(item.id === todoItem.id){\r\n            return{\r\n              ...item, completed: !item.completed\r\n            };\r\n          }\r\n          return item;\r\n        }))\r\n    }\r\n  return (\r\n    <div className=\"\">\r\n      <p className={`todo todo-item ${todoItem.completed ? \"completed\" : \"\"}`}>{text}</p>\r\n      <button onClick={completeHandler} className=\"complete-btn\">\r\n          <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button onClick={deleteHandler} className=\"trash-btn\">\r\n          <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\n\r\n//Importing Components\r\nimport Todo from './Todo';\r\nconst TodoList = ({todoArray, setTodoArray}) => {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <div className=\"todo-list\">\r\n        {todoArray.map(todo => (\r\n          <Todo todoItem={todo} todoArray={todoArray} setTodoArray={setTodoArray} id={todo.id} text={todo.text}></Todo>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport InputText from \"./components/InputText\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n\n  //states\n  const [inputText, setInputText] = useState(\"\");\n  const [todoArray, setTodoArray] = useState([]);\n  const [filter, setFilter] = useState(\"All\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  //run once when the app starts\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n  //use effect\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todoArray]);\n  useEffect(() => {\n  let circle1 = document.querySelector(\".circle1\");\n    \n    setInterval(function () {\n      circle1.style.left = Math.floor(Math.random() * 80) + \"%\";\n      circle1.style.top = Math.floor(Math.random() * 100) + \"%\";\n    }, 6000);\n  }, [])\n  //functions\n  const filterHandler = () => {\n    switch (filter) {\n      case \"completed\":\n        setFilteredTodos(todoArray.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todoArray.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todoArray);\n        break;\n    }\n  };\n\n  //save to local storage\nconst saveLocalTodos = () => {\n    localStorage.setItem('todoArray', JSON.stringify(todoArray));\n};\nconst getLocalTodos = () => {\n  if(localStorage.getItem('todoArray') == null) {\n    localStorage.setItem('todoArray', JSON.stringify([]));\n  }\n  else {\n    let todoLocal = JSON.parse(localStorage.getItem('todoArray', JSON.stringify(todoArray)));\n    setTodoArray(todoLocal)\n  }\n}\n  return (\n    <div className=\"App\">\n      <header>\n        <div className=\"strokes-h1\"><h1>Yet another notes taking web app</h1></div>\n        <div className=\"circle1\"></div>\n        <div className=\"solid-h1\"><h1>Yet another notes taking web app</h1></div>\n      </header>\n\n      <InputText\n        inputText={inputText}\n        todoArray={todoArray}\n        setTodoArray={setTodoArray}\n        setInputText={setInputText}\n        setFilter={setFilter}\n      ></InputText>\n      \n      <TodoList todoArray={todoArray} setTodoArray={setTodoArray}></TodoList>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}