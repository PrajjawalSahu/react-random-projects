{"version":3,"sources":["components/InputText.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["InputText","inputText","setInputText","todoArray","setTodoArray","setFilter","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","TodoItem","todoItem","map","item","filter","el","TodoList","todo","Todo","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAoCeA,EAlCG,SAAC,GAAqE,IAAnEC,EAAkE,EAAlEA,UAAWC,EAAuD,EAAvDA,aAAcC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAiBrE,OACE,iCACE,uBAAOC,MAAOL,EAAWM,SAjBJ,SAACC,GACxBC,QAAQC,IAAIF,EAAEG,OAAOL,OACrBJ,EAAaM,EAAEG,OAAOL,QAeiCM,KAAK,OAAOC,UAAU,eAC3E,wBAAQC,QAda,SAACN,GACtBA,EAAEO,iBACFX,EAAa,GAAD,mBACPD,GADO,CAEV,CAACa,KAAMf,EAAWgB,WAAW,EAAOC,GAAkB,IAAdC,KAAKC,aAE/ClB,EAAa,KAQuBW,UAAU,cAAcD,KAAK,SAAjE,SACE,mBAAGC,UAAU,yBAEf,qBAAKA,UAAU,SAAf,SACE,yBAAQN,SAVQ,SAACC,GACrBH,EAAUG,EAAEG,OAAOL,QASkBe,KAAK,QAAQR,UAAU,cAAxD,UACE,wBAAQP,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kC,OCEKgB,EA7BE,SAAC,GAAmD,IAAlDN,EAAiD,EAAjDA,KAAUO,GAAuC,EAA3CL,GAA2C,EAAvCK,UAAUpB,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,aAgBhD,OACE,sBAAKS,UAAU,OAAf,UACE,oBAAIA,UAAS,oBAAeU,EAASN,UAAY,YAAc,IAA/D,SAAsED,IACtE,wBAAQF,QAbc,WACpBV,EAAaD,EAAUqB,KAAI,SAACC,GAC1B,OAAGA,EAAKP,KAAOK,EAASL,GACtB,2BACKO,GADL,IACWR,WAAYQ,EAAKR,YAGvBQ,OAMuBZ,UAAU,eAA5C,SACI,mBAAGA,UAAU,mBAEjB,wBAAQC,QApBY,WAClBV,EAAaD,EAAUuB,QAAO,SAACC,GAAD,OAAQA,EAAGT,KAAOK,EAASL,QAmB3BL,UAAU,YAA1C,SACI,mBAAGA,UAAU,uBCTRe,EAZE,SAAC,GAA+B,IAA9BzB,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,aAC5B,OACE,qBAAKS,UAAU,iBAAf,SACE,oBAAIA,UAAU,YAAd,SACGV,EAAUqB,KAAI,SAAAK,GAAI,OACjB,cAACC,EAAD,CAAMP,SAAUM,EAAM1B,UAAWA,EAAWC,aAAcA,EAAcc,GAAIW,EAAKX,GAAIF,KAAMa,EAAKb,eCW3Fe,MAff,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACN/B,EADM,KACKC,EADL,OAEqB8B,mBAAS,IAF9B,mBAEN7B,EAFM,KAEKC,EAFL,OAGe4B,mBAAS,OAHxB,mBAGE3B,GAHF,WAIb,OACE,sBAAKQ,UAAU,MAAf,UACE,iCACA,oDAEA,cAAC,EAAD,CAAWZ,UAAWA,EAAWE,UAAWA,EAAWC,aAAcA,EAAcF,aAAcA,EAAcG,UAAWA,IAC1H,cAAC,EAAD,CAAUF,UAAWA,EAAWC,aAAcA,QCHrC6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6ee58be8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst InputText = ({ inputText, setInputText, todoArray, setTodoArray, setFilter }) => {\r\n  //here we can write javascript code\r\n  const inputTextHandler = (e) => {\r\n    console.log(e.target.value);\r\n    setInputText(e.target.value);\r\n  };\r\n  const submitTodoHandler =(e) => {\r\n      e.preventDefault();\r\n      setTodoArray([\r\n        ...todoArray, \r\n        {text: inputText, completed: false, id: Math.random()*10000}\r\n      ]);\r\n      setInputText('');\r\n  }\r\n  const filterHandler = (e) => {\r\n    setFilter(e.target.value);\r\n  }\r\n  return (\r\n    <form>\r\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={filterHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default InputText;\r\n","import React from \"react\";\r\n\r\nconst TodoItem = ({text, id, todoItem, todoArray, setTodoArray}) => {\r\n//Events\r\n    const deleteHandler = () => {\r\n        setTodoArray(todoArray.filter((el) => el.id !== todoItem.id));\r\n    }\r\n\r\n    const completeHandler = () => {\r\n        setTodoArray(todoArray.map((item) => {\r\n          if(item.id === todoItem.id){\r\n            return{\r\n              ...item, completed: !item.completed\r\n            };\r\n          }\r\n          return item;\r\n        }))\r\n    }\r\n  return (\r\n    <div className=\"todo\">\r\n      <li className={`todo-item ${todoItem.completed ? \"completed\" : \"\"}`}>{text}</li>\r\n      <button onClick={completeHandler} className=\"complete-btn\">\r\n          <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button onClick={deleteHandler} className=\"trash-btn\">\r\n          <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\n\r\n//Importing Components\r\nimport Todo from './Todo';\r\nconst TodoList = ({todoArray, setTodoArray}) => {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {todoArray.map(todo => (\r\n          <Todo todoItem={todo} todoArray={todoArray} setTodoArray={setTodoArray} id={todo.id} text={todo.text}></Todo>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState } from \"react\";\nimport './App.css';\n\nimport InputText from \"./components/InputText\";\nimport TodoList from \"./components/TodoList\";\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todoArray, setTodoArray] = useState([]);\n  const [filter, setFilter] = useState(\"All\");\n  return (\n    <div className=\"App\">\n      <header>\n      <h1>React To Do List</h1>\n      </header>\n      <InputText inputText={inputText} todoArray={todoArray} setTodoArray={setTodoArray} setInputText={setInputText} setFilter={setFilter}></InputText>\n      <TodoList todoArray={todoArray} setTodoArray={setTodoArray}></TodoList>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}